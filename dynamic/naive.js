'use strict';
/*global セル数, 筋の数, 盤面, 人, COM, 筋の配列, 画面を更新する, ランダム戦略で一手進める, COMが一手進める:true */

function そろう場所を探す(手番) {
  for (var i = 0; i < 筋の数; ++i) {
    var 筋 = 筋の配列[i];
    var a = 筋[0];
    var b = 筋[1];
    var c = 筋[2];
    if (盤面[a] === 0 && 盤面[b] === 手番 && 盤面[c] === 手番) {
      return a;
    }
    if (盤面[a] === 手番 && 盤面[b] === 0 && 盤面[c] === 手番) {
      return b;
    }
    if (盤面[a] === 手番 && 盤面[b] === 手番 && 盤面[c] === 0) {
      return c;
    }
  }
  return null;//候補無し
}

function 二個並びに注意する戦略で一手進める() {
  var 次の手 = そろう場所を探す(COM);//勝つ手を探す
  if (次の手 !== null) {
    盤面[次の手] = COM;
    return;
  }
  次の手 = そろう場所を探す(人);//勝ちを阻む手を探す(阻めないこともある)
  if (次の手 !== null) {
    盤面[次の手] = COM;
    return;
  }
  ランダム戦略で一手進める();
}

//関数を上書きする
COMが一手進める = function() {
  二個並びに注意する戦略で一手進める();
  画面を更新する();
};
